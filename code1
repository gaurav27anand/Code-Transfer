import plotly.graph_objects as go
import pandas as pd
import base64
from io import BytesIO

# Sample data (replace with your actual data)
pipeline_data = {
    'timestamp': ['5-Nov', '6-Nov', '7-Nov', '8-Nov', '9-Nov', '10-Nov', '11-Nov', '12-Nov'],
    'duration': [25, 15, 20, 30, 18, 22, 27, 15],
    'status': ['success', 'success', 'failure', 'success', 'failure', 'success', 'success', 'success']
}
df = pd.DataFrame(pipeline_data)

# Create colors for the bars based on the status
colors = ['green' if status == 'success' else 'red' for status in df['status']]

# Generate the Plotly bar graph
fig = go.Figure(data=[
    go.Bar(
        x=df['timestamp'],
        y=df['duration'],
        marker_color=colors,
        text=df['status'],
        hoverinfo='text+y'
    )
])

fig.update_layout(
    title='Pipeline Runtimes',
    xaxis_title='Date',
    yaxis_title='Duration (Minutes)',
    showlegend=False
)

# Save the figure as an image
image_bytes = fig.to_image(format="png")

# Encode the image to base64
image_base64 = base64.b64encode(image_bytes).decode('utf-8')

# HTML content for the email with the embedded image
html_content = f"""
<html>
<head></head>
<body>
    <h2>Pipeline Runtimes</h2>
    <img src="data:image/png;base64,{image_base64}" alt="Pipeline Runtimes" style="width: 100%; height: auto;">
    <!-- Other email content here -->
</body>
</html>
"""

# Now, `html_content` contains the image as Base64 embedded.
# You can use it in the email body directly.
print(html_content)
