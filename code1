import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

# Read the graph's HTML snippet
with open(graph_html, 'r') as file:
    graph_content = file.read()

# Create email message
email_from = "your_email@example.com"
email_to = "recipient_email@example.com"
subject = "Pipeline Report with Embedded Graph"

# Create the HTML email content
html_content = f"""
<html>
<head>
    <style>
        /* Add custom styles if needed */
    </style>
</head>
<body>
    <h2>Pipeline Report</h2>
    <h3>Summary:</h3>
    <table border="1">
        <tr>
            <th>Total Runs</th>
            <th>Success</th>
            <th>Failure</th>
            <th>Success Rate (%)</th>
            <th>Max Runtime (min)</th>
            <th>Min Runtime (min)</th>
            <th>Average Runtime (min)</th>
        </tr>
        <tr>
            <td>{len(df)}</td>
            <td>{len(df[df['result'] == 'SUCCESS'])}</td>
            <td>{len(df[df['result'] == 'FAILURE'])}</td>
            <td>{(len(df[df['result'] == 'SUCCESS']) / len(df)) * 100:.2f}</td>
            <td>{df['duration_in_minutes'].max():.2f}</td>
            <td>{df['duration_in_minutes'].min():.2f}</td>
            <td>{df['duration_in_minutes'].mean():.2f}</td>
        </tr>
    </table>
    <h3>Pipeline Runtime Graph:</h3>
    {graph_content} <!-- Embedding the graph content -->
</body>
</html>
"""

# Set up the email
message = MIMEMultipart("alternative")
message["From"] = email_from
message["To"] = email_to
message["Subject"] = subject

# Attach the HTML content
message.attach(MIMEText(html_content, "html"))

# Send the email
with smtplib.SMTP("smtp.example.com", 587) as server:  # Update your SMTP server and port
    server.starttls()
    server.login("your_email@example.com", "your_password")
    server.sendmail(email_from, email_to, message.as_string())

print("Email sent successfully!")